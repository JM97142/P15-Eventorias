name: Android CI with SonarCloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build & Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Run unit tests with Jacoco
        run: ./gradlew clean testDebugUnitTest jacocoUnitTestReport --stacktrace

      - name: Upload unit test report
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-report
          path: app/build/reports/tests/testDebugUnitTest/

      - name: SonarCloud Scan
        if: ${{ github.actor != 'dependabot[bot]' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info

      - name: Verify SonarCloud Quality Gate
        if: ${{ github.actor != 'dependabot[bot]' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "Checking SonarCloud Quality Gate status..."
          status=$(curl -s -u "$SONAR_TOKEN:" "https://sonarcloud.io/api/qualitygates/project_status?projectKey=JM97142_P15-Eventorias" | jq -r '.projectStatus.status')
          echo "Quality Gate status: $status"
          if [ "$status" != "OK" ]; then
            echo "Quality Gate failed"
            exit 1
          fi

  instrumentation-tests:
    name: Instrumented Tests
    runs-on: macos-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Start emulator & run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: pixel_6
          disable-animations: true
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio
          script: |
            adb devices
            ./gradlew connectedDebugAndroidTest --stacktrace
            ./gradlew jacocoAndroidTestReport --stacktrace

      - name: Upload instrumentation test report
        uses: actions/upload-artifact@v4
        with:
          name: android-test-report
          path: app/build/reports/androidTests/connected/
